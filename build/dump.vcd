$date
	Tue Mar  7 06:48:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # c $end
$var wire 1 $ s $end
$upscope $end
$scope module divide3 $end
$var wire 1 % clk $end
$var wire 1 & reset $end
$var reg 2 ' count [1:0] $end
$var reg 1 ( out $end
$upscope $end
$scope module divide5 $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var reg 4 + count [3:0] $end
$var reg 1 , out $end
$upscope $end
$scope module divide_by_3 $end
$var wire 1 - clk $end
$var reg 3 . count [2:0] $end
$var reg 1 / q $end
$upscope $end
$scope module divideby2 $end
$var wire 1 0 clk_rx $end
$var wire 1 1 rst_n $end
$var reg 1 2 clk_tx $end
$upscope $end
$scope module divideby3 $end
$var wire 1 3 clk $end
$var reg 3 4 count [2:0] $end
$var reg 1 5 q $end
$upscope $end
$scope module testbench $end
$var wire 1 6 q1 $end
$var wire 1 7 q $end
$var reg 1 8 clk $end
$var reg 1 9 rst $end
$scope module dut $end
$var wire 1 8 clk $end
$var wire 1 7 out $end
$var wire 1 9 reset $end
$var reg 1 : mid_1 $end
$var reg 1 ; mid_2 $end
$upscope $end
$scope module dut2 $end
$var wire 1 8 clk $end
$var wire 1 6 out $end
$var wire 1 9 reset $end
$var reg 1 < mid_1 $end
$var reg 1 = mid_2 $end
$var reg 1 > mid_3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0>
0=
0<
0;
0:
09
18
07
06
x5
b0 4
z3
x2
z1
z0
x/
b0 .
z-
x,
bx +
z*
z)
x(
bx '
z&
z%
x$
x#
z"
z!
$end
#1
08
#2
16
17
1=
1;
1:
18
19
#3
08
#4
0:
1>
18
#5
07
08
#6
0=
0;
07
18
#7
06
08
#8
17
1;
1:
0>
1<
06
18
#9
08
#10
0<
0:
18
#11
07
08
#12
16
0;
1=
07
18
#13
08
#14
17
1>
1;
1:
18
#15
08
#16
0:
0=
18
#17
07
06
08
#18
0>
1<
0;
07
06
18
#19
08
#20
17
1;
1:
0<
18
#21
08
#22
16
1=
0:
18
#23
07
08
#24
0;
1>
07
18
#25
08
#26
17
0=
1;
1:
18
#27
06
08
#28
0:
0>
1<
06
18
#29
07
08
#30
0<
0;
07
18
#31
08
#32
17
16
1;
1:
1=
18
#33
08
#34
1>
0:
18
#35
07
08
#36
0;
0=
07
18
#37
06
08
#38
17
0>
1<
1;
1:
06
18
#39
08
#40
0:
0<
18
#41
07
08
#42
16
1=
0;
07
18
#43
08
#44
17
1;
1:
1>
18
#45
08
#46
0=
0:
18
#47
07
06
08
#48
0;
0>
1<
07
06
18
#49
08
#50
17
0<
1;
1:
18
#51
08
#52
16
0:
1=
18
#53
07
08
#54
1>
0;
07
18
#55
08
#56
17
1;
1:
0=
18
#57
06
08
#58
0>
1<
0:
06
18
#59
07
08
#60
0;
0<
07
18
#61
08
#62
16
17
1=
1;
1:
18
#63
08
#64
0:
1>
18
#65
07
08
#66
0=
0;
07
18
#67
06
08
#68
17
1;
1:
0>
1<
06
18
#69
08
#70
0<
0:
18
#71
07
08
#72
16
0;
1=
07
18
#73
08
#74
17
1>
1;
1:
18
#75
08
#76
0:
0=
18
#77
07
06
08
#78
0>
1<
0;
07
06
18
#79
08
#80
17
1;
1:
0<
18
#81
08
#82
16
1=
0:
18
#83
07
08
#84
0;
1>
07
18
#85
08
#86
17
0=
1;
1:
18
#87
06
08
#88
0:
0>
1<
06
18
#89
07
08
#90
0<
0;
07
18
#91
08
#92
17
16
1;
1:
1=
18
#93
08
#94
1>
0:
18
#95
07
08
#96
0;
0=
07
18
#97
06
08
#98
17
0>
1<
1;
1:
06
18
#99
08
#100
0:
0<
18
#101
07
08
#102
16
1=
0;
07
18
